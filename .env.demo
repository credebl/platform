API_GATEWAY_PROTOCOL=http
API_GATEWAY_HOST=0.0.0.0
API_GATEWAY_PORT=5000
API_GATEWAY_PROTOCOL_SECURE=http
API_ENDPOINT=your-ip:5000

FRONT_END_URL=http://localhost:3001

MOBILE_APP=ADEYA
MOBILE_APP_NAME=ADEYA SSI App
MOBILE_APP_DOWNLOAD_URL='https://blockster.global/products/adeya'
PLAY_STORE_DOWNLOAD_LINK=https://play.google.com/store/apps/details?id=id.credebl.adeya&pli=1
IOS_DOWNLOAD_LINK=https://apps.apple.com/in/app/adeya-ssi-wallet/id6463845498

PLATFORM_NAME=CREDEBL
POWERED_BY=Blockster Labs Pvt. Ltd.
PLATFORM_WEB_URL=https://credebl.id/
POWERED_BY_URL=https://blockster.global
UPLOAD_LOGO_HOST=devapi.credebl.id
BRAND_LOGO=https://credebl.id/images/CREDEBL_LOGO.png
PLATFORM_ADMIN_EMAIL=platform.admin@yopmail.com

SOCKET_HOST=ws://your-ip:5000

NATS_HOST=your-ip
NATS_PORT=4222
NATS_URL=nats://your-ip:4222

REDIS_HOST=your-ip
REDIS_PORT=6379

SENDGRID_API_KEY= 

WALLET_STORAGE_HOST=your-ip
WALLET_STORAGE_PORT=5432
WALLET_STORAGE_USER='postgres'
WALLET_STORAGE_PASSWORD='postgres'

CRYPTO_PRIVATE_KEY=dzIvVU5uMa0R3sYwdjEEuT4id17mPpjr
PLATFORM_URL=https://devapi.credebl.id
PLATFORM_PROFILE_MODE=DEV

PUBLIC_LOCALHOST_URL=http://localhost:5000
PUBLIC_DEV_API_URL=https://devapi.credebl.id
PUBLIC_QA_API_URL=https://qa-api.credebl.id
PUBLIC_PRODUCTION_API_URL=https://api.credebl.id
PUBLIC_SANDBOX_API_URL=https://sandboxapi.credebl.id
PUBLIC_PLATFORM_SUPPORT_EMAIL=support@blockster.global

AFJ_VERSION=ghcr.io/credebl/credo-controller:latest

PLATFORM_WALLET_NAME=platform-admin
PLATFORM_WALLET_PASSWORD='U2FsdGVkX19l6w/PpuicnGBYThBHolzF27oN0JwfWkc='
PLATFORM_SEED=000000000000000000000000Steward1
PLATFORM_ID=1

# The format for below is as follows: postgresql://{postgres.user}:{postgres.password}@{your-ip}:{postgres.port}/{database-name}
POOL_DATABASE_URL="postgresql://postgres:postgres@your-ip:5432/credebl"
DATABASE_URL="postgresql://postgres:postgres@your-ip:5432/credebl"

# Used for Bulk issuance of credential
# Optional (Can be skipped if Bulk issuance is not used)
AWS_ACCESS_KEY=
AWS_SECRET_KEY=
AWS_REGION=
AWS_BUCKET=

# Used for Adding org-logo during org creation and update 
# Optional (Can be skipped if no image is added during org creation and updation)
AWS_PUBLIC_ACCESS_KEY=
AWS_PUBLIC_SECRET_KEY=
AWS_PUBLIC_REGION=
AWS_ORG_LOGO_BUCKET_NAME=

# Used for storing connection URL generated from Agent and creating shortened URL
# Required (As connecting to org requires Shortened url)
AWS_S3_STOREOBJECT_ACCESS_KEY=
AWS_S3_STOREOBJECT_SECRET_KEY=
AWS_S3_STOREOBJECT_REGION= 
AWS_S3_STOREOBJECT_BUCKET=

# Please refere AWS to determine your bucket url
# https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html#path-style-access 
SHORTENED_URL_DOMAIN='https://AWS_S3_STOREOBJECT_REGION.amazonaws.com/AWS_S3_STOREOBJECT_BUCKET'
DEEPLINK_DOMAIN='https://link.credebl.id?url='

ENABLE_CORS_IP_LIST=http://localhost:3000, http://localhost:3001, http://localhost:5000,http://localhost:8085,https://verify.credebl.id,https://verifyed.credebl.id,https://verify-api.credebl.id,https://qa.credebl.id,https://dev.credebl.id,https://credebl.id

USER_NKEY_SEED=
API_GATEWAY_NKEY_SEED=
ORGANIZATION_NKEY_SEED=
AGENT_PROVISIONING_NKEY_SEED=
AGENT_SERVICE_NKEY_SEED=
VERIFICATION_NKEY_SEED=
LEDGER_NKEY_SEED=
ISSUANCE_NKEY_SEED=
CONNECTION_NKEY_SEED=
ECOSYSTEM_NKEY_SEED=
CREDENTAILDEFINITION_NKEY_SEED=
SCHEMA_NKEY_SEED=
UTILITIES_NKEY_SEED=
CLOUD_WALLET_NKEY_SEED=
GEOLOCATION_NKEY_SEED=
NOTIFICATION_NKEY_SEED=

KEYCLOAK_DOMAIN=http://localhost:8080/
KEYCLOAK_ADMIN_URL=http://localhost:8080
KEYCLOAK_MASTER_REALM=master
KEYCLOAK_MANAGEMENT_CLIENT_ID=adminClient
KEYCLOAK_MANAGEMENT_CLIENT_SECRET=
KEYCLOAK_REALM=credebl-platform

SCHEMA_FILE_SERVER_URL='https://schema.credebl.id/schemas/'
SCHEMA_FILE_SERVER_TOKEN=

GEO_LOCATION_MASTER_DATA_IMPORT_SCRIPT=/prisma/scripts/geo_location_data_import.sh
UPDATE_CLIENT_CREDENTIAL_SCRIPT=/prisma/scripts/update_client_credential_data.sh
# Note: the below 3 variables are only in case of starting services using docker
AFJ_AGENT_TOKEN_PATH=/agent-provisioning/AFJ/token/
AFJ_AGENT_SPIN_UP=/agent-provisioning/AFJ/scripts/docker_start_agent.sh
AFJ_AGENT_ENDPOINT_PATH=/agent-provisioning/AFJ/endpoints/
# Uncomment bellow three lines and comment the above to start services locally without using docker, using pnpm
# AFJ_AGENT_TOKEN_PATH=/apps/agent-provisioning/AFJ/token/
# AFJ_AGENT_SPIN_UP=/apps/agent-provisioning/AFJ/scripts/start_agent.sh
# AFJ_AGENT_ENDPOINT_PATH=/apps/agent-provisioning/AFJ/endpoints/
 
AGENT_PROTOCOL=http
OOB_BATCH_SIZE=10
PROOF_REQ_CONN_LIMIT=10
MAX_ORG_LIMIT=10
FIDO_API_ENDPOINT=http://localhost:8000

IS_ECOSYSTEM_ENABLE=false
CONSOLE_LOG_FLAG=true # Enable or disable console ELK logs
ELK_LOG=false # ELK flag
LOG_LEVEL=debug # ELK log level
ELK_LOG_PATH= "http://localhost:9200/" # ELK log path
ELK_USERNAME=elastic # ELK user username
ELK_PASSWORD=xxxxxx # ELK user password

ORGANIZATION=credebl
CONTEXT=platform
APP=api

#Schema-file-server
APP_PORT=4000
JWT_TOKEN_SECRET=
ISSUER=Credebl