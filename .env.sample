MODE=DEV

SUPABASE_URL= // Please specify your Supabase URL
SUPABASE_KEY= // Please specify your Supabase Anon key
SUPABASE_JWT_SECRET= // Please specify your Supabase jwt secret

API_GATEWAY_PROTOCOL=http
API_GATEWAY_HOST='0.0.0.0'
API_GATEWAY_PORT=5000
API_GATEWAY_PROTOCOL_SECURE=http

##
PLATFORM_NAME= // Please specify your paltform name 
PLATFORM_LOGO= // Please specify your paltform logo url
PUBLIC_PLATFORM_SUPPORT_EMAIL= // Please specify your support email 
POWERED_BY= // Please specify your powered by org name
PLATFORM_WEB_URL= // Please specify your platform web URL
POWERED_BY_URL= // Please specify your support URL

UPLOAD_LOGO_HOST= // Please specify your logo host or domain url

PUBLIC_LOCALHOST_URL= // Please specify your localhost URL
PUBLIC_DEV_API_URL= // Please specify your DEV environment api URL
PUBLIC_QA_API_URL= // Please specify your your QA environment api URL
PUBLIC_PRODUCTION_API_URL= // Please specify your PRODUCTION environment api URL
PUBLIC_SANDBOX_API_URL= // Please specify your sandbox environment URL

SHORTENED_URL_DOMAIN= // Please specify the domain for your bucket responsible for storing shortened url objects e.g. 'https://bucket-name.s3.ap-east-1.amazonaws.com'
DEEPLINK_DOMAIN= // Please specify your doamin/subdomain responsible for deeplinking with 'url' as a query param e.g. 'https://your-deeplink-domain?url='

AGENT_HOST=username@0.0.0.0   // Please specify your agent host VM and IP address
AWS_ACCOUNT_ID=xxxxx  // Please provide your AWS account Id
S3_BUCKET_ARN=arn:aws:s3:::xxxxx  // Please provide your AWS bucket arn

API_ENDPOINT=localhost:5000  #Use your local machine IP Address & PORT
API_ENDPOINT_PORT=5000

SOCKET_HOST=http://localhost:5000

AWS_PUBLIC_ACCESS_KEY= // Please provide your aws bucket access key
AWS_PUBLIC_SECRET_KEY= // Please provide your aws secret key
AWS_PUBLIC_REGION= // Please provide your aws region
AWS_PUBLIC_BUCKET_NAME= // Please provide your aws bucket name

AWS_ORG_LOGO_BUCKET_NAME= // Please provide your aws org bucket name

AWS_S3_STOREOBJECT_ACCESS_KEY= // Please provide your aws bucket access key
AWS_S3_STOREOBJECT_SECRET_KEY= // Please provide your aws bucket secret key
AWS_S3_STOREOBJECT_REGION= // Please provide your aws region
AWS_S3_STOREOBJECT_BUCKET= // Please provide your aws bucket
AWS_ACCESS_KEY= // Please provide your access key
AWS_SECRET_KEY= // Please provide your secret key
AWS_REGION= // Please provide your aws region
AWS_BUCKET= // Please provide your aws bucket

PLATFORM_ADMIN_EMAIL= // Please provide admin email Id

NATS_HOST='0.0.0.0'
NATS_PORT=4222
NATS_URL=nats://0.0.0.0:4222

REDIS_HOST='0.0.0.0'
REDIS_PORT=6379

POSTGRES_HOST=0.0.0.0
POSTGRES_PORT=5432
POSTGRES_USER='postgres'
POSTGRES_PASSWORD='xxxxx'
POSTGRES_DATABASE= // Please provide your DB name

SENDGRID_API_KEY=xxxxxxxxxxxxxx // Please provide your sendgrid API key

FRONT_END_URL=http://localhost:3000

FILE_SERVER= // Please provide your file server
FILE_SERVER_PORT=8081
FILE_SERVER_USER=credebl
FILE_SERVER_HOST=0.0.0.0

AFJ_AGENT_SPIN_UP=/apps/agent-provisioning/AFJ/scripts/start_agent.sh

WALLET_STORAGE_HOST=localhost   # Use IP Address
WALLET_STORAGE_PORT=5432
WALLET_STORAGE_USER=postgres
WALLET_STORAGE_PASSWORD=xxxxxx

CRYPTO_PRIVATE_KEY=xxxxx-xxxxx-xxxxx-xxxxx   #It should be same as studio UI 

AFJ_VERSION=afj-0.4.1:latest 

FIDO_API_ENDPOINT=http://localhost:8000     # Host:port of your FIDO (WebAuthn) Server

PLATFORM_WALLET_NAME=platform-admin
PLATFORM_WALLET_PASSWORD=      // Please provide encrypt password using crypto-js
PLATFORM_SEED=                 // The seed should consist of 32 characters.
PLATFORM_ID=

PLATFORM_PROFILE_MODE= // Please provide your environment name

OOB_BATCH_SIZE=10

AFJ_AGENT_ENDPOINT_PATH=/apps/agent-provisioning/AFJ/endpoints/
DATABASE_URL="postgresql://postgres:xxxxxx@localhost:5432/postgres?schema=public"    #Provide supabase postgres URL and Use the correct user/pwd, IP Address
POOL_DATABASE_URL="" #Provide pooler supabase postgres URL
CLUSTER_NAME=""  # ecs cluster
TESKDEFINITION_FAMILY="" # ecs task-definition
AGENT_PROTOCOL=http
GEO_LOCATION_MASTER_DATA_IMPORT_SCRIPT=/prisma/scripts/geo_location_data_import.sh
UPDATE_CLIENT_CREDENTIAL_SCRIPT=/prisma/scripts/update_client_credential_data.sh

USER_NKEY_SEED= xxxxxxxxxxxxx // Please provide Nkeys secret for user service
API_GATEWAY_NKEY_SEED= xxxxxxxxxxxxx // Please provide Nkeys secret for api-gateway
ORGANIZATION_NKEY_SEED= xxxxxxxxxxxxx // Please provide Nkeys secret for organization service
AGENT_PROVISIONING_NKEY_SEED= xxxxxxxxxxxxx // Please provide Nkeys secret for agent provisioning service
AGENT_SERVICE_NKEY_SEED= xxxxxxxxxxxxx // Please provide Nkeys secret for agent service
VERIFICATION_NKEY_SEED= xxxxxxxxxxxxx // Please provide Nkeys secret for verification service
ISSUANCE_NKEY_SEED= xxxxxxxxxxxxx // Please provide Nkeys secret for issuance service
CONNECTION_NKEY_SEED= xxxxxxxxxxxxx // Please provide Nkeys secret for connection service
ECOSYSTEM_NKEY_SEED= xxxxxxxxxxxxx // Please provide Nkeys secret for ecosystem service
CREDENTAILDEFINITION_NKEY_SEED= xxxxxxxxxxxxx // Please provide Nkeys secret for credential-definition service
SCHEMA_NKEY_SEED= xxxxxxxxxxxxx // Please provide Nkeys secret for schema service
UTILITIES_NKEY_SEED= xxxxxxxxxxxxx // Please provide Nkeys secret for utilities service
GEOLOCATION_NKEY_SEED= xxxxxxxxxxx // Please provide Nkeys secret for geo-location service

AFJ_AGENT_TOKEN_PATH=/apps/agent-provisioning/AFJ/token/

# This was inserted by prisma init:
# Environment variables declared in this file are automatically made available to Prisma.
# See the documentation for more detail: https://pris.ly/d/prisma-schema#accessing-environment-variables-from-the-schema

# Prisma supports the native connection string format for PostgreSQL, MySQL, SQLite, SQL Server, MongoDB and CockroachDB (Preview).
# See the documentation for all the connection string options: https://pris.ly/d/connection-strings


# enable only prisma:engine-level debugging output 
export DEBUG="prisma:engine" 

# enable only prisma:client-level debugging output 
export DEBUG="prisma:client" 
 
# enable both prisma-client- and engine-level debugging output 
export DEBUG="prisma:client,prisma:engine"

KEYCLOAK_DOMAIN=http://localhost:8080/
KEYCLOAK_ADMIN_URL=http://localhost:8080
KEYCLOAK_MASTER_REALM=xxxxxxx
KEYCLOAK_MANAGEMENT_CLIENT_ID=xxxxxxx
KEYCLOAK_MANAGEMENT_CLIENT_SECRET=xxxxxxx
KEYCLOAK_REALM=xxxxxxx

ENABLE_CORS_IP_LIST="" # Provide a list of domains that are allowed to use this server
SCHEMA_FILE_SERVER_URL= // Please provide schema URL 
SCHEMA_FILE_SERVER_TOKEN=xxxxxxxx // Please provide schema file server token for polygon